// This file is generated by Firebase Studio.
'use server';
/**
 * @fileOverview AI flow for modifying the style (hairstyle, outfit) of a person in a photo based on a text prompt.
 *
 * - modifyStyle - A function that handles the style modification process.
 * - ModifyStyleInput - The input type for the modifyStyle function.
 * - ModifyStyleOutput - The return type for the modifyStyle function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ModifyStyleInputSchema = z.object({
  photoDataUri: z
    .string()
    .describe(
      "A photo of a person, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
  stylePrompt: z.string().describe('A text prompt describing the desired style change (e.g., hairstyle, outfit).'),
});
export type ModifyStyleInput = z.infer<typeof ModifyStyleInputSchema>;

const ModifyStyleOutputSchema = z.object({
  modifiedPhotoDataUri: z
    .string()
    .describe('The modified photo as a data URI.'),
});
export type ModifyStyleOutput = z.infer<typeof ModifyStyleOutputSchema>;

export async function modifyStyle(input: ModifyStyleInput): Promise<ModifyStyleOutput> {
  return modifyStyleFlow(input);
}

const modifyStylePrompt = ai.definePrompt({
  name: 'modifyStylePrompt',
  input: {schema: ModifyStyleInputSchema},
  output: {schema: ModifyStyleOutputSchema},
  prompt: `You are an AI-powered style modification tool.  You will modify the provided photo of a person according to the style described in the prompt.

    Instructions:
    1.  Pay close attention to the stylePrompt and apply the described changes to the hairstyle and/or outfit in the photo.
    2.  Maintain the original person's identity and overall pose.
    3.  Return the modified image as a data URI.

    Style Prompt: {{{stylePrompt}}}
    Photo: {{media url=photoDataUri}}`,
  // IMPORTANT: ONLY the googleai/gemini-2.0-flash-preview-image-generation model is able to generate images. You MUST use exactly this model to generate images.
  model: 'googleai/gemini-2.0-flash-preview-image-generation',
  config: {
    responseModalities: ['TEXT', 'IMAGE'], // MUST provide both TEXT and IMAGE, IMAGE only won't work
  },
});

const modifyStyleFlow = ai.defineFlow(
  {
    name: 'modifyStyleFlow',
    inputSchema: ModifyStyleInputSchema,
    outputSchema: ModifyStyleOutputSchema,
  },
  async input => {
    const {media} = await ai.generate({
      prompt: [
        {media: {url: input.photoDataUri}},
        {text: input.stylePrompt},
      ],
      model: 'googleai/gemini-2.0-flash-preview-image-generation',
      config: {
        responseModalities: ['TEXT', 'IMAGE'], // MUST provide both TEXT and IMAGE, IMAGE only won't work
      },
    });
    return {modifiedPhotoDataUri: media!.url};
  }
);
